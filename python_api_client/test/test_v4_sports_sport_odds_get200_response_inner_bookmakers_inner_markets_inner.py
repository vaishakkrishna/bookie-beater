# coding: utf-8

"""
    The Odds API

    To access the API, get a free API key from https://the-odds-api.com

    The version of the OpenAPI document: 4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v4_sports_sport_odds_get200_response_inner_bookmakers_inner_markets_inner import V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner

class TestV4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner(unittest.TestCase):
    """V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner:
        """Test V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner`
        """
        model = V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner()
        if include_optional:
            return V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner(
                key = 'h2h',
                last_update = '2023-10-10T12:10:29Z',
                outcomes = [{"name":"Houston Texans","price":2.23},{"name":"Kansas City Chiefs","price":1.45}],
                link = '',
                sid = ''
            )
        else:
            return V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner(
        )
        """

    def testV4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner(self):
        """Test V4SportsSportOddsGet200ResponseInnerBookmakersInnerMarketsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
